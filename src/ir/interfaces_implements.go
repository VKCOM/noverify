// Code generated by the `ir/codegen` package. DO NOT EDIT.
package ir

import (
	"github.com/VKCOM/noverify/src/phpdoc"
)

func (n *AnonClassExpr) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *AnonClassExpr) ArgList() []Node {
	return n.Args
}

func (n *Argument) Name() *Identifier {
	return n.ArgName
}

func (n *ArrowFunctionExpr) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ArrowFunctionExpr) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ArrowFunctionExpr) ParamList() []Node {
	return n.Params
}

func (n *ArrowFunctionExpr) TypeHint() Node {
	return n.ReturnType
}

func (n *Attribute) ArgList() []Node {
	return n.Args
}

func (n *ClassConstFetchExpr) Name() *Identifier {
	return n.ConstantName
}

func (n *ClassConstListStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClassConstListStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClassConstListStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *ClassMethodStmt) Name() *Identifier {
	return n.MethodName
}

func (n *ClassMethodStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClassMethodStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClassMethodStmt) ParamList() []Node {
	return n.Params
}

func (n *ClassMethodStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *ClassMethodStmt) TypeHint() Node {
	return n.ReturnType
}

func (n *ClassStmt) Name() *Identifier {
	return n.ClassName
}

func (n *ClassStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClassStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClassStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *ClosureExpr) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClosureExpr) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClosureExpr) ParamList() []Node {
	return n.Params
}

func (n *ClosureExpr) TypeHint() Node {
	return n.ReturnType
}

func (n *ConstantStmt) Name() *Identifier {
	return n.ConstantName
}

func (n *FunctionCallExpr) ArgList() []Node {
	return n.Args
}

func (n *FunctionStmt) Name() *Identifier {
	return n.FunctionName
}

func (n *FunctionStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *FunctionStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *FunctionStmt) ParamList() []Node {
	return n.Params
}

func (n *FunctionStmt) TypeHint() Node {
	return n.ReturnType
}

func (n *InterfaceStmt) Name() *Identifier {
	return n.InterfaceName
}

func (n *InterfaceStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *InterfaceStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *LabelStmt) Name() *Identifier {
	return n.LabelName
}

func (n *MethodCallExpr) ArgList() []Node {
	return n.Args
}

func (n *NewExpr) ArgList() []Node {
	return n.Args
}

func (n *NullsafeMethodCallExpr) ArgList() []Node {
	return n.Args
}

func (n *Parameter) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *Parameter) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *Parameter) TypeHint() Node {
	return n.VariableType
}

func (n *PropertyListStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *PropertyListStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *PropertyListStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *PropertyListStmt) TypeHint() Node {
	return n.PropertyType
}

func (n *StaticCallExpr) ArgList() []Node {
	return n.Args
}

func (n *TraitStmt) Name() *Identifier {
	return n.TraitName
}

func (n *TraitStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *TraitStmt) DocComment() phpdoc.Comment {
	return n.Doc
}
