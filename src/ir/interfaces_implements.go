// Code generated by the `ir/codegen` package. DO NOT EDIT.
package ir

import (
	"github.com/VKCOM/noverify/src/phpdoc"
)

func (n *AnonClassExpr) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *AnonClassExpr) ArgList() []Node {
	return n.Args
}

func (n *Argument) Name() *Identifier {
	return n.ArgName
}

func (n *ArrowFunctionExpr) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ArrowFunctionExpr) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ArrowFunctionExpr) ParamList() []Node {
	return n.Params
}

func (n *ArrowFunctionExpr) TypeHint() Node {
	return n.ReturnType
}

func (n *Attribute) ArgList() []Node {
	return n.Args
}

func (n *BitwiseAndExpr) Lhs() Node {
	return n.Left
}

func (n *BitwiseAndExpr) Rhs() Node {
	return n.Right
}

func (n *BitwiseOrExpr) Lhs() Node {
	return n.Left
}

func (n *BitwiseOrExpr) Rhs() Node {
	return n.Right
}

func (n *BitwiseXorExpr) Lhs() Node {
	return n.Left
}

func (n *BitwiseXorExpr) Rhs() Node {
	return n.Right
}

func (n *BooleanAndExpr) Lhs() Node {
	return n.Left
}

func (n *BooleanAndExpr) Rhs() Node {
	return n.Right
}

func (n *BooleanOrExpr) Lhs() Node {
	return n.Left
}

func (n *BooleanOrExpr) Rhs() Node {
	return n.Right
}

func (n *ClassConstFetchExpr) Name() *Identifier {
	return n.ConstantName
}

func (n *ClassConstListStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClassConstListStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClassConstListStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *ClassMethodStmt) Name() *Identifier {
	return n.MethodName
}

func (n *ClassMethodStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClassMethodStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClassMethodStmt) ParamList() []Node {
	return n.Params
}

func (n *ClassMethodStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *ClassMethodStmt) TypeHint() Node {
	return n.ReturnType
}

func (n *ClassStmt) Name() *Identifier {
	return n.ClassName
}

func (n *ClassStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClassStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClassStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *ClosureExpr) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *ClosureExpr) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *ClosureExpr) ParamList() []Node {
	return n.Params
}

func (n *ClosureExpr) TypeHint() Node {
	return n.ReturnType
}

func (n *CoalesceExpr) Lhs() Node {
	return n.Left
}

func (n *CoalesceExpr) Rhs() Node {
	return n.Right
}

func (n *ConcatExpr) Lhs() Node {
	return n.Left
}

func (n *ConcatExpr) Rhs() Node {
	return n.Right
}

func (n *ConstantStmt) Name() *Identifier {
	return n.ConstantName
}

func (n *DivExpr) Lhs() Node {
	return n.Left
}

func (n *DivExpr) Rhs() Node {
	return n.Right
}

func (n *EqualExpr) Lhs() Node {
	return n.Left
}

func (n *EqualExpr) Rhs() Node {
	return n.Right
}

func (n *FunctionCallExpr) ArgList() []Node {
	return n.Args
}

func (n *FunctionStmt) Name() *Identifier {
	return n.FunctionName
}

func (n *FunctionStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *FunctionStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *FunctionStmt) ParamList() []Node {
	return n.Params
}

func (n *FunctionStmt) TypeHint() Node {
	return n.ReturnType
}

func (n *GreaterExpr) Lhs() Node {
	return n.Left
}

func (n *GreaterExpr) Rhs() Node {
	return n.Right
}

func (n *GreaterOrEqualExpr) Lhs() Node {
	return n.Left
}

func (n *GreaterOrEqualExpr) Rhs() Node {
	return n.Right
}

func (n *IdenticalExpr) Lhs() Node {
	return n.Left
}

func (n *IdenticalExpr) Rhs() Node {
	return n.Right
}

func (n *InterfaceStmt) Name() *Identifier {
	return n.InterfaceName
}

func (n *InterfaceStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *InterfaceStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *LabelStmt) Name() *Identifier {
	return n.LabelName
}

func (n *LogicalAndExpr) Lhs() Node {
	return n.Left
}

func (n *LogicalAndExpr) Rhs() Node {
	return n.Right
}

func (n *LogicalOrExpr) Lhs() Node {
	return n.Left
}

func (n *LogicalOrExpr) Rhs() Node {
	return n.Right
}

func (n *LogicalXorExpr) Lhs() Node {
	return n.Left
}

func (n *LogicalXorExpr) Rhs() Node {
	return n.Right
}

func (n *MethodCallExpr) ArgList() []Node {
	return n.Args
}

func (n *MinusExpr) Lhs() Node {
	return n.Left
}

func (n *MinusExpr) Rhs() Node {
	return n.Right
}

func (n *ModExpr) Lhs() Node {
	return n.Left
}

func (n *ModExpr) Rhs() Node {
	return n.Right
}

func (n *MulExpr) Lhs() Node {
	return n.Left
}

func (n *MulExpr) Rhs() Node {
	return n.Right
}

func (n *NewExpr) ArgList() []Node {
	return n.Args
}

func (n *NotEqualExpr) Lhs() Node {
	return n.Left
}

func (n *NotEqualExpr) Rhs() Node {
	return n.Right
}

func (n *NotIdenticalExpr) Lhs() Node {
	return n.Left
}

func (n *NotIdenticalExpr) Rhs() Node {
	return n.Right
}

func (n *NullsafeMethodCallExpr) ArgList() []Node {
	return n.Args
}

func (n *Parameter) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *Parameter) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *Parameter) TypeHint() Node {
	return n.VariableType
}

func (n *PlusExpr) Lhs() Node {
	return n.Left
}

func (n *PlusExpr) Rhs() Node {
	return n.Right
}

func (n *PowExpr) Lhs() Node {
	return n.Left
}

func (n *PowExpr) Rhs() Node {
	return n.Right
}

func (n *PropertyListStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *PropertyListStmt) DocComment() phpdoc.Comment {
	return n.Doc
}

func (n *PropertyListStmt) ModifierList() []*Identifier {
	return n.Modifiers
}

func (n *PropertyListStmt) TypeHint() Node {
	return n.PropertyType
}

func (n *ShiftLeftExpr) Lhs() Node {
	return n.Left
}

func (n *ShiftLeftExpr) Rhs() Node {
	return n.Right
}

func (n *ShiftRightExpr) Lhs() Node {
	return n.Left
}

func (n *ShiftRightExpr) Rhs() Node {
	return n.Right
}

func (n *SmallerExpr) Lhs() Node {
	return n.Left
}

func (n *SmallerExpr) Rhs() Node {
	return n.Right
}

func (n *SmallerOrEqualExpr) Lhs() Node {
	return n.Left
}

func (n *SmallerOrEqualExpr) Rhs() Node {
	return n.Right
}

func (n *SpaceshipExpr) Lhs() Node {
	return n.Left
}

func (n *SpaceshipExpr) Rhs() Node {
	return n.Right
}

func (n *StaticCallExpr) ArgList() []Node {
	return n.Args
}

func (n *TraitStmt) Name() *Identifier {
	return n.TraitName
}

func (n *TraitStmt) GetAttributes() []*AttributeGroup {
	return n.AttrGroups
}

func (n *TraitStmt) DocComment() phpdoc.Comment {
	return n.Doc
}
