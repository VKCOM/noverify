// Code generated by the `ir/codegen` package. DO NOT EDIT.
package ir

func (n *AnonClassExpr) Parent() Node {
	return n.ParentNode
}

func (n *Argument) Parent() Node {
	return n.ParentNode
}

func (n *ArrayDimFetchExpr) Parent() Node {
	return n.ParentNode
}

func (n *ArrayExpr) Parent() Node {
	return n.ParentNode
}

func (n *ArrayItemExpr) Parent() Node {
	return n.ParentNode
}

func (n *ArrowFunctionExpr) Parent() Node {
	return n.ParentNode
}

func (n *Assign) Parent() Node {
	return n.ParentNode
}

func (n *AssignBitwiseAnd) Parent() Node {
	return n.ParentNode
}

func (n *AssignBitwiseOr) Parent() Node {
	return n.ParentNode
}

func (n *AssignBitwiseXor) Parent() Node {
	return n.ParentNode
}

func (n *AssignCoalesce) Parent() Node {
	return n.ParentNode
}

func (n *AssignConcat) Parent() Node {
	return n.ParentNode
}

func (n *AssignDiv) Parent() Node {
	return n.ParentNode
}

func (n *AssignMinus) Parent() Node {
	return n.ParentNode
}

func (n *AssignMod) Parent() Node {
	return n.ParentNode
}

func (n *AssignMul) Parent() Node {
	return n.ParentNode
}

func (n *AssignPlus) Parent() Node {
	return n.ParentNode
}

func (n *AssignPow) Parent() Node {
	return n.ParentNode
}

func (n *AssignReference) Parent() Node {
	return n.ParentNode
}

func (n *AssignShiftLeft) Parent() Node {
	return n.ParentNode
}

func (n *AssignShiftRight) Parent() Node {
	return n.ParentNode
}

func (n *Attribute) Parent() Node {
	return n.ParentNode
}

func (n *AttributeGroup) Parent() Node {
	return n.ParentNode
}

func (n *BadString) Parent() Node {
	return n.ParentNode
}

func (n *BitwiseAndExpr) Parent() Node {
	return n.ParentNode
}

func (n *BitwiseNotExpr) Parent() Node {
	return n.ParentNode
}

func (n *BitwiseOrExpr) Parent() Node {
	return n.ParentNode
}

func (n *BitwiseXorExpr) Parent() Node {
	return n.ParentNode
}

func (n *BooleanAndExpr) Parent() Node {
	return n.ParentNode
}

func (n *BooleanNotExpr) Parent() Node {
	return n.ParentNode
}

func (n *BooleanOrExpr) Parent() Node {
	return n.ParentNode
}

func (n *BreakStmt) Parent() Node {
	return n.ParentNode
}

func (n *CaseStmt) Parent() Node {
	return n.ParentNode
}

func (n *CatchStmt) Parent() Node {
	return n.ParentNode
}

func (n *ClassConstFetchExpr) Parent() Node {
	return n.ParentNode
}

func (n *ClassConstListStmt) Parent() Node {
	return n.ParentNode
}

func (n *ClassExtendsStmt) Parent() Node {
	return n.ParentNode
}

func (n *ClassImplementsStmt) Parent() Node {
	return n.ParentNode
}

func (n *ClassMethodStmt) Parent() Node {
	return n.ParentNode
}

func (n *ClassStmt) Parent() Node {
	return n.ParentNode
}

func (n *CloneExpr) Parent() Node {
	return n.ParentNode
}

func (n *CloseTagStmt) Parent() Node {
	return n.ParentNode
}

func (n *ClosureExpr) Parent() Node {
	return n.ParentNode
}

func (n *ClosureUsesExpr) Parent() Node {
	return n.ParentNode
}

func (n *CoalesceExpr) Parent() Node {
	return n.ParentNode
}

func (n *ConcatExpr) Parent() Node {
	return n.ParentNode
}

func (n *ConstFetchExpr) Parent() Node {
	return n.ParentNode
}

func (n *ConstListStmt) Parent() Node {
	return n.ParentNode
}

func (n *ConstantStmt) Parent() Node {
	return n.ParentNode
}

func (n *ContinueStmt) Parent() Node {
	return n.ParentNode
}

func (n *DeclareStmt) Parent() Node {
	return n.ParentNode
}

func (n *DefaultStmt) Parent() Node {
	return n.ParentNode
}

func (n *DivExpr) Parent() Node {
	return n.ParentNode
}

func (n *Dnumber) Parent() Node {
	return n.ParentNode
}

func (n *DoStmt) Parent() Node {
	return n.ParentNode
}

func (n *EchoStmt) Parent() Node {
	return n.ParentNode
}

func (n *ElseIfStmt) Parent() Node {
	return n.ParentNode
}

func (n *ElseStmt) Parent() Node {
	return n.ParentNode
}

func (n *EmptyExpr) Parent() Node {
	return n.ParentNode
}

func (n *Encapsed) Parent() Node {
	return n.ParentNode
}

func (n *EncapsedStringPart) Parent() Node {
	return n.ParentNode
}

func (n *EqualExpr) Parent() Node {
	return n.ParentNode
}

func (n *ErrorSuppressExpr) Parent() Node {
	return n.ParentNode
}

func (n *EvalExpr) Parent() Node {
	return n.ParentNode
}

func (n *ExitExpr) Parent() Node {
	return n.ParentNode
}

func (n *ExpressionStmt) Parent() Node {
	return n.ParentNode
}

func (n *FinallyStmt) Parent() Node {
	return n.ParentNode
}

func (n *ForStmt) Parent() Node {
	return n.ParentNode
}

func (n *ForeachStmt) Parent() Node {
	return n.ParentNode
}

func (n *FunctionCallExpr) Parent() Node {
	return n.ParentNode
}

func (n *FunctionStmt) Parent() Node {
	return n.ParentNode
}

func (n *GlobalStmt) Parent() Node {
	return n.ParentNode
}

func (n *GotoStmt) Parent() Node {
	return n.ParentNode
}

func (n *GreaterExpr) Parent() Node {
	return n.ParentNode
}

func (n *GreaterOrEqualExpr) Parent() Node {
	return n.ParentNode
}

func (n *GroupUseStmt) Parent() Node {
	return n.ParentNode
}

func (n *HaltCompilerStmt) Parent() Node {
	return n.ParentNode
}

func (n *Heredoc) Parent() Node {
	return n.ParentNode
}

func (n *IdenticalExpr) Parent() Node {
	return n.ParentNode
}

func (n *Identifier) Parent() Node {
	return n.ParentNode
}

func (n *IfStmt) Parent() Node {
	return n.ParentNode
}

func (n *ImportExpr) Parent() Node {
	return n.ParentNode
}

func (n *InlineHTMLStmt) Parent() Node {
	return n.ParentNode
}

func (n *InstanceOfExpr) Parent() Node {
	return n.ParentNode
}

func (n *InterfaceExtendsStmt) Parent() Node {
	return n.ParentNode
}

func (n *InterfaceStmt) Parent() Node {
	return n.ParentNode
}

func (n *IssetExpr) Parent() Node {
	return n.ParentNode
}

func (n *LabelStmt) Parent() Node {
	return n.ParentNode
}

func (n *ListExpr) Parent() Node {
	return n.ParentNode
}

func (n *Lnumber) Parent() Node {
	return n.ParentNode
}

func (n *LogicalAndExpr) Parent() Node {
	return n.ParentNode
}

func (n *LogicalOrExpr) Parent() Node {
	return n.ParentNode
}

func (n *LogicalXorExpr) Parent() Node {
	return n.ParentNode
}

func (n *MagicConstant) Parent() Node {
	return n.ParentNode
}

func (n *MatchArm) Parent() Node {
	return n.ParentNode
}

func (n *MatchExpr) Parent() Node {
	return n.ParentNode
}

func (n *MethodCallExpr) Parent() Node {
	return n.ParentNode
}

func (n *MinusExpr) Parent() Node {
	return n.ParentNode
}

func (n *ModExpr) Parent() Node {
	return n.ParentNode
}

func (n *MulExpr) Parent() Node {
	return n.ParentNode
}

func (n *Name) Parent() Node {
	return n.ParentNode
}

func (n *NamespaceStmt) Parent() Node {
	return n.ParentNode
}

func (n *NewExpr) Parent() Node {
	return n.ParentNode
}

func (n *NopStmt) Parent() Node {
	return n.ParentNode
}

func (n *NotEqualExpr) Parent() Node {
	return n.ParentNode
}

func (n *NotIdenticalExpr) Parent() Node {
	return n.ParentNode
}

func (n *Nullable) Parent() Node {
	return n.ParentNode
}

func (n *NullsafeMethodCallExpr) Parent() Node {
	return n.ParentNode
}

func (n *NullsafePropertyFetchExpr) Parent() Node {
	return n.ParentNode
}

func (n *Parameter) Parent() Node {
	return n.ParentNode
}

func (n *ParenExpr) Parent() Node {
	return n.ParentNode
}

func (n *PlusExpr) Parent() Node {
	return n.ParentNode
}

func (n *PostDecExpr) Parent() Node {
	return n.ParentNode
}

func (n *PostIncExpr) Parent() Node {
	return n.ParentNode
}

func (n *PowExpr) Parent() Node {
	return n.ParentNode
}

func (n *PreDecExpr) Parent() Node {
	return n.ParentNode
}

func (n *PreIncExpr) Parent() Node {
	return n.ParentNode
}

func (n *PrintExpr) Parent() Node {
	return n.ParentNode
}

func (n *PropertyFetchExpr) Parent() Node {
	return n.ParentNode
}

func (n *PropertyListStmt) Parent() Node {
	return n.ParentNode
}

func (n *PropertyStmt) Parent() Node {
	return n.ParentNode
}

func (n *ReferenceExpr) Parent() Node {
	return n.ParentNode
}

func (n *ReturnStmt) Parent() Node {
	return n.ParentNode
}

func (n *Root) Parent() Node {
	return n.ParentNode
}

func (n *ShellExecExpr) Parent() Node {
	return n.ParentNode
}

func (n *ShiftLeftExpr) Parent() Node {
	return n.ParentNode
}

func (n *ShiftRightExpr) Parent() Node {
	return n.ParentNode
}

func (n *SimpleVar) Parent() Node {
	return n.ParentNode
}

func (n *SmallerExpr) Parent() Node {
	return n.ParentNode
}

func (n *SmallerOrEqualExpr) Parent() Node {
	return n.ParentNode
}

func (n *SpaceshipExpr) Parent() Node {
	return n.ParentNode
}

func (n *StaticCallExpr) Parent() Node {
	return n.ParentNode
}

func (n *StaticPropertyFetchExpr) Parent() Node {
	return n.ParentNode
}

func (n *StaticStmt) Parent() Node {
	return n.ParentNode
}

func (n *StaticVarStmt) Parent() Node {
	return n.ParentNode
}

func (n *StmtList) Parent() Node {
	return n.ParentNode
}

func (n *String) Parent() Node {
	return n.ParentNode
}

func (n *SwitchStmt) Parent() Node {
	return n.ParentNode
}

func (n *TernaryExpr) Parent() Node {
	return n.ParentNode
}

func (n *ThrowExpr) Parent() Node {
	return n.ParentNode
}

func (n *ThrowStmt) Parent() Node {
	return n.ParentNode
}

func (n *TraitAdaptationListStmt) Parent() Node {
	return n.ParentNode
}

func (n *TraitMethodRefStmt) Parent() Node {
	return n.ParentNode
}

func (n *TraitStmt) Parent() Node {
	return n.ParentNode
}

func (n *TraitUseAliasStmt) Parent() Node {
	return n.ParentNode
}

func (n *TraitUsePrecedenceStmt) Parent() Node {
	return n.ParentNode
}

func (n *TraitUseStmt) Parent() Node {
	return n.ParentNode
}

func (n *TryStmt) Parent() Node {
	return n.ParentNode
}

func (n *TypeCastExpr) Parent() Node {
	return n.ParentNode
}

func (n *UnaryMinusExpr) Parent() Node {
	return n.ParentNode
}

func (n *UnaryPlusExpr) Parent() Node {
	return n.ParentNode
}

func (n *Union) Parent() Node {
	return n.ParentNode
}

func (n *UnsetCastExpr) Parent() Node {
	return n.ParentNode
}

func (n *UnsetStmt) Parent() Node {
	return n.ParentNode
}

func (n *UseListStmt) Parent() Node {
	return n.ParentNode
}

func (n *UseStmt) Parent() Node {
	return n.ParentNode
}

func (n *Var) Parent() Node {
	return n.ParentNode
}

func (n *WhileStmt) Parent() Node {
	return n.ParentNode
}

func (n *YieldExpr) Parent() Node {
	return n.ParentNode
}

func (n *YieldFromExpr) Parent() Node {
	return n.ParentNode
}
