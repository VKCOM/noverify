WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function realpath signature of param path at testdata/mustache/src/Mustache/Autoloader.php:39
        $realDir = realpath($baseDir);
                            ^^^^^^^^
WARNING notSafetyCall: potential not safety call in function is_dir signature of param filename at testdata/mustache/src/Mustache/Autoloader.php:40
        if (is_dir($realDir)) {
                   ^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$baseDir ?: 0` at testdata/mustache/src/Mustache/Autoloader.php:56
        $key = $baseDir ? $baseDir : 0;
               ^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function strpos signature of param haystack at testdata/mustache/src/Mustache/Autoloader.php:79
        if (strpos($class, 'Mustache') !== 0) {
                   ^^^^^^
ERROR   undefinedClass: Class or interface named \Psr\Log\LoggerInterface does not exist at testdata/mustache/src/Mustache/Cache/AbstractCache.php:26
     * @return Mustache_Logger|Psr\Log\LoggerInterface
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   undefinedClass: Class or interface named \Psr\Log\LoggerInterface does not exist at testdata/mustache/src/Mustache/Cache/AbstractCache.php:36
     * @param Mustache_Logger|Psr\Log\LoggerInterface $logger
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING errorSilence: Don't use @, silencing errors is bad practice at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:110
            @mkdir($dirName, 0777, true);
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING errorSilence: Don't use @, silencing errors is bad practice at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:140
        if (false !== @file_put_contents($tempFile, $value)) {
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function file_put_contents signature of param filename at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:140
        if (false !== @file_put_contents($tempFile, $value)) {
                                         ^^^^^^^^^
WARNING errorSilence: Don't use @, silencing errors is bad practice at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:141
            if (@rename($tempFile, $fileName)) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function rename signature of param from at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:141
            if (@rename($tempFile, $fileName)) {
                        ^^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$this->fileMode ?? (0666 & ~umask())` at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:142
                $mode = isset($this->fileMode) ? $this->fileMode : (0666 & ~umask());
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING errorSilence: Don't use @, silencing errors is bad practice at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:143
                @chmod($fileName, $mode);
                ^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function chmod signature of param permissions at testdata/mustache/src/Mustache/Cache/FilesystemCache.php:143
                @chmod($fileName, $mode);
                                  ^^^^^
WARNING useEval: Don't use the 'eval' function at testdata/mustache/src/Mustache/Cache/NoopCache.php:45
        eval('?>' . $value);
        ^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter id of function section at testdata/mustache/src/Mustache/Compiler.php:98
                        $node[Mustache_Tokenizer::NAME],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter start of function section at testdata/mustache/src/Mustache/Compiler.php:100
                        $node[Mustache_Tokenizer::INDEX],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter end of function section at testdata/mustache/src/Mustache/Compiler.php:101
                        $node[Mustache_Tokenizer::END],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter otag of function section at testdata/mustache/src/Mustache/Compiler.php:102
                        $node[Mustache_Tokenizer::OTAG],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter ctag of function section at testdata/mustache/src/Mustache/Compiler.php:103
                        $node[Mustache_Tokenizer::CTAG],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$node[Mustache_Tokenizer::FILTERS] ?? array()` at testdata/mustache/src/Mustache/Compiler.php:99
                        isset($node[Mustache_Tokenizer::FILTERS]) ? $node[Mustache_Tokenizer::FILTERS] : array(),
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter id of function invertedSection at testdata/mustache/src/Mustache/Compiler.php:111
                        $node[Mustache_Tokenizer::NAME],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$node[Mustache_Tokenizer::FILTERS] ?? array()` at testdata/mustache/src/Mustache/Compiler.php:112
                        isset($node[Mustache_Tokenizer::FILTERS]) ? $node[Mustache_Tokenizer::FILTERS] : array(),
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter id of function partial at testdata/mustache/src/Mustache/Compiler.php:119
                        $node[Mustache_Tokenizer::NAME],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$node[Mustache_Tokenizer::INDENT] ?? ''` at testdata/mustache/src/Mustache/Compiler.php:120
                        isset($node[Mustache_Tokenizer::INDENT]) ? $node[Mustache_Tokenizer::INDENT] : '',
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter id of function parent at testdata/mustache/src/Mustache/Compiler.php:127
                        $node[Mustache_Tokenizer::NAME],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$node[Mustache_Tokenizer::INDENT] ?? ''` at testdata/mustache/src/Mustache/Compiler.php:128
                        isset($node[Mustache_Tokenizer::INDENT]) ? $node[Mustache_Tokenizer::INDENT] : '',
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter id of function blockArg at testdata/mustache/src/Mustache/Compiler.php:137
                        $node[Mustache_Tokenizer::NAME],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter start of function blockArg at testdata/mustache/src/Mustache/Compiler.php:138
                        $node[Mustache_Tokenizer::INDEX],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter end of function blockArg at testdata/mustache/src/Mustache/Compiler.php:139
                        $node[Mustache_Tokenizer::END],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter otag of function blockArg at testdata/mustache/src/Mustache/Compiler.php:140
                        $node[Mustache_Tokenizer::OTAG],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter ctag of function blockArg at testdata/mustache/src/Mustache/Compiler.php:141
                        $node[Mustache_Tokenizer::CTAG],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter id of function blockVar at testdata/mustache/src/Mustache/Compiler.php:149
                        $node[Mustache_Tokenizer::NAME],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter start of function blockVar at testdata/mustache/src/Mustache/Compiler.php:150
                        $node[Mustache_Tokenizer::INDEX],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter end of function blockVar at testdata/mustache/src/Mustache/Compiler.php:151
                        $node[Mustache_Tokenizer::END],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter otag of function blockVar at testdata/mustache/src/Mustache/Compiler.php:152
                        $node[Mustache_Tokenizer::OTAG],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter ctag of function blockVar at testdata/mustache/src/Mustache/Compiler.php:153
                        $node[Mustache_Tokenizer::CTAG],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter id of function variable at testdata/mustache/src/Mustache/Compiler.php:165
                        $node[Mustache_Tokenizer::NAME],
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$node[Mustache_Tokenizer::FILTERS] ?? array()` at testdata/mustache/src/Mustache/Compiler.php:166
                        isset($node[Mustache_Tokenizer::FILTERS]) ? $node[Mustache_Tokenizer::FILTERS] : array(),
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter text of function text at testdata/mustache/src/Mustache/Compiler.php:173
                    $code .= $this->text($node[Mustache_Tokenizer::VALUE], $level);
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING unused: Variable $keystr is unused (use $_ to ignore this inspection or specify --unused-var-regex flag) at testdata/mustache/src/Mustache/Compiler.php:289
        $keystr = var_export($key, true);
        ^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function getFindMethod signature of param id at testdata/mustache/src/Mustache/Compiler.php:556
        $method   = $this->getFindMethod($name);
                                         ^^^^^
MAYBE   callSimplify: Could simplify to $id[0] at testdata/mustache/src/Mustache/Compiler.php:646
            if (substr($id, 0, 1) === '.') {
                ^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant KLASS must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:184
    const KLASS = '<?php
    ^^^^^^^
ERROR   classMembersOrder: Constant KLASS_NO_LAMBDAS must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:202
    const KLASS_NO_LAMBDAS = '<?php
    ^^^^^^^
ERROR   classMembersOrder: Constant STRICT_CALLABLE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:215
    const STRICT_CALLABLE = 'protected $strictCallables = true;';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant BLOCK_VAR must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:237
    const BLOCK_VAR = '
    ^^
ERROR   classMembersOrder: Constant BLOCK_VAR_ELSE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:244
    const BLOCK_VAR_ELSE = '} else {%s';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant BLOCK_ARG must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:271
    const BLOCK_ARG = '%s => array($this, \'block%s\'),';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant BLOCK_FUNCTION must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:295
    const BLOCK_FUNCTION = '
    ^^
ERROR   classMembersOrder: Constant SECTION_CALL must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:323
    const SECTION_CALL = '
    ^^
ERROR   classMembersOrder: Constant SECTION must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:329
    const SECTION = '
    ^^
ERROR   classMembersOrder: Constant INVERTED_SECTION must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:398
    const INVERTED_SECTION = '
    ^^
ERROR   classMembersOrder: Constant PARTIAL_INDENT must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:425
    const PARTIAL_INDENT = ', $indent . %s';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant PARTIAL must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:426
    const PARTIAL = '
    ^^
ERROR   classMembersOrder: Constant PARENT must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:456
    const PARENT = '
    ^^
ERROR   classMembersOrder: Constant PARENT_NO_CONTEXT must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:465
    const PARENT_NO_CONTEXT = '
    ^^
ERROR   classMembersOrder: Constant VARIABLE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:508
    const VARIABLE = '
    ^^
ERROR   classMembersOrder: Constant FILTER must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:533
    const FILTER = '
    ^^
ERROR   classMembersOrder: Constant LINE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:564
    const LINE = '$buffer .= "\n";';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant TEXT must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:565
    const TEXT = '$buffer .= %s%s;';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant DEFAULT_ESCAPE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:607
    const DEFAULT_ESCAPE = 'htmlspecialchars(%s, %s, %s)';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant CUSTOM_ESCAPE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:608
    const CUSTOM_ESCAPE  = 'call_user_func($this->mustache->getEscape(), %s)';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant IS_CALLABLE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:658
    const IS_CALLABLE        = '!is_string(%s) && is_callable(%s)';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant STRICT_IS_CALLABLE must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:659
    const STRICT_IS_CALLABLE = 'is_object(%s) && is_callable(%s)';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   classMembersOrder: Constant LINE_INDENT must go before methods in the class Mustache_Compiler at testdata/mustache/src/Mustache/Compiler.php:675
    const LINE_INDENT = '$indent . ';
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   callSimplify: Could simplify to $this->stack[] = $value at testdata/mustache/src/Mustache/Context.php:39
        array_push($this->stack, $value);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   callSimplify: Could simplify to $this->blockStack[] = $value at testdata/mustache/src/Mustache/Context.php:49
        array_push($this->blockStack, $value);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function findVariableInStack signature of param id at testdata/mustache/src/Mustache/Context.php:131
        $value  = $this->findVariableInStack($first, $this->stack);
                                             ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function findVariableInStack signature of param id at testdata/mustache/src/Mustache/Context.php:138
            $value = $this->findVariableInStack($chunk, array($value));
                                                ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function findVariableInStack signature of param id at testdata/mustache/src/Mustache/Context.php:174
            $value = $this->findVariableInStack($chunk, array($value));
                                                ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function method_exists signature of param object_or_class at testdata/mustache/src/Mustache/Context.php:218
                        if (method_exists($frame, $id)) {
                                          ^^^^^^
WARNING switchDefault: Add 'default' branch to avoid unexpected unhandled condition values at testdata/mustache/src/Mustache/Context.php:213
            switch (gettype($frame)) {
            ^
MAYBE   ternarySimplify: Could rewrite as `$options['cache_file_mode'] ?? null` at testdata/mustache/src/Mustache/Engine.php:156
                $mode  = isset($options['cache_file_mode']) ? $options['cache_file_mode'] : null;
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function setCache signature of param cache at testdata/mustache/src/Mustache/Engine.php:160
            $this->setCache($cache);
                            ^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter loader of function setLoader at testdata/mustache/src/Mustache/Engine.php:168
            $this->setLoader($options['loader']);
                             ^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter partialsLoader of function setPartialsLoader at testdata/mustache/src/Mustache/Engine.php:172
            $this->setPartialsLoader($options['partials_loader']);
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   misspellComment: "entitity" is a misspelling of "entity" at testdata/mustache/src/Mustache/Engine.php:254
    public function getEntityFlags()
                    ^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function addHelper signature of param name at testdata/mustache/src/Mustache/Engine.php:373
            $this->addHelper($name, $helper);
                             ^^^^^
ERROR   undefinedClass: Class or interface named \Psr\Log\LoggerInterface does not exist at testdata/mustache/src/Mustache/Engine.php:451
     * @param Mustache_Logger|Psr\Log\LoggerInterface $logger
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   undefinedMethod: Call to undefined method {\Mustache_Cache}->getLogger() at testdata/mustache/src/Mustache/Engine.php:459
        if ($this->getCache()->getLogger() === null) {
                               ^^^^^^^^^
ERROR   undefinedMethod: Call to undefined method {\Mustache_Cache}->setLogger() at testdata/mustache/src/Mustache/Engine.php:460
            $this->getCache()->setLogger($logger);
                               ^^^^^^^^^
ERROR   undefinedClass: Class or interface named \Psr\Log\LoggerInterface does not exist at testdata/mustache/src/Mustache/Engine.php:469
     * @return Mustache_Logger|Psr\Log\LoggerInterface
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR   undefinedMethod: Call to undefined method {\Mustache_Cache}->getLogger() at testdata/mustache/src/Mustache/Engine.php:561
        if (isset($this->logger) && $cache->getLogger() === null) {
                                            ^^^^^^^^^
ERROR   undefinedMethod: Call to undefined method {\Mustache_Cache}->setLogger() at testdata/mustache/src/Mustache/Engine.php:562
            $cache->setLogger($this->getLogger());
                    ^^^^^^^^^
MAYBE   ternarySimplify: Could rewrite as `$this->delimiters ?: '{{ }}'` at testdata/mustache/src/Mustache/Engine.php:628
            'delimiters'      => $this->delimiters ? $this->delimiters : '{{ }}',
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function md5 signature of param string at testdata/mustache/src/Mustache/Engine.php:645
        return $this->templateClassPrefix . md5($key);
                                                ^^^^
WARNING notSafetyCall: potential not safety call in function parse signature of param source at testdata/mustache/src/Mustache/Engine.php:808
        $tree = $this->parse($source);
                             ^^^^^^^
WARNING notSafetyCall: potential not safety call in function compile signature of param source at testdata/mustache/src/Mustache/Engine.php:813
        return $compiler->compile($source, $tree, $name, isset($this->escape), $this->charset, $this->strictCallables, $this->entityFlags);
                                  ^^^^^^^
WARNING notNullSafetyFunctionArgumentPropertyFetch: potential null dereference when accessing property 'charset' at testdata/mustache/src/Mustache/Engine.php:813
        return $compiler->compile($source, $tree, $name, isset($this->escape), $this->charset, $this->strictCallables, $this->entityFlags);
                                                                               ^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentPropertyFetch: potential null dereference when accessing property 'strictCallables' at testdata/mustache/src/Mustache/Engine.php:813
        return $compiler->compile($source, $tree, $name, isset($this->escape), $this->charset, $this->strictCallables, $this->entityFlags);
                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
WARNING notExplicitNullableParam: parameter with null default value should be explicitly nullable at testdata/mustache/src/Mustache/Engine.php:727
    private function loadSource($source, Mustache_Cache $cache = null)
                                         ^^^^^^^^^^^^^^
WARNING notExplicitNullableParam: parameter with null default value should be explicitly nullable at testdata/mustache/src/Mustache/Exception/SyntaxException.php:24
    public function __construct($msg, array $token, Exception $previous = null)
                                                    ^^^^^^^^^
MAYBE   missingPhpdoc: Missing PHPDoc for \Mustache_Exception_UnknownFilterException::getFilterName public method at testdata/mustache/src/Mustache/Exception/UnknownFilterException.php:34
    public function getFilterName()
                    ^^^^^^^^^^^^^
WARNING notExplicitNullableParam: parameter with null default value should be explicitly nullable at testdata/mustache/src/Mustache/Exception/UnknownFilterException.php:23
    public function __construct($filterName, Exception $previous = null)
                                             ^^^^^^^^^
MAYBE   missingPhpdoc: Missing PHPDoc for \Mustache_Exception_UnknownHelperException::getHelperName public method at testdata/mustache/src/Mustache/Exception/UnknownHelperException.php:34
    public function getHelperName()
                    ^^^^^^^^^^^^^
WARNING notExplicitNullableParam: parameter with null default value should be explicitly nullable at testdata/mustache/src/Mustache/Exception/UnknownHelperException.php:23
    public function __construct($helperName, Exception $previous = null)
                                             ^^^^^^^^^
MAYBE   missingPhpdoc: Missing PHPDoc for \Mustache_Exception_UnknownTemplateException::getTemplateName public method at testdata/mustache/src/Mustache/Exception/UnknownTemplateException.php:34
    public function getTemplateName()
                    ^^^^^^^^^^^^^^^
WARNING notExplicitNullableParam: parameter with null default value should be explicitly nullable at testdata/mustache/src/Mustache/Exception/UnknownTemplateException.php:23
    public function __construct($templateName, Exception $previous = null)
                                               ^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function add signature of param name at testdata/mustache/src/Mustache/HelperCollection.php:39
            $this->add($name, $helper);
                       ^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function addLoader signature of param loader at testdata/mustache/src/Mustache/Loader/CascadingLoader.php:35
            $this->addLoader($loader);
                             ^^^^^^^
WARNING notSafetyCall: potential not safety accessing property 'baseDir' at testdata/mustache/src/Mustache/Loader/FilesystemLoader.php:52
        if (strpos($this->baseDir, '://') === false) {
                   ^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety accessing property 'baseDir' at testdata/mustache/src/Mustache/Loader/FilesystemLoader.php:53
            $this->baseDir = realpath($this->baseDir);
                                      ^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety accessing property 'baseDir' at testdata/mustache/src/Mustache/Loader/FilesystemLoader.php:56
        if ($this->shouldCheckPath() && !is_dir($this->baseDir)) {
                                                ^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter string of function ltrim at testdata/mustache/src/Mustache/Loader/FilesystemLoader.php:64
                $this->extension = '.' . ltrim($options['extension'], '.');
                                               ^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety accessing property 'baseDir' at testdata/mustache/src/Mustache/Loader/FilesystemLoader.php:133
        return strpos($this->baseDir, '://') === false || strpos($this->baseDir, 'file://') === 0;
                      ^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety accessing property 'baseDir' at testdata/mustache/src/Mustache/Loader/FilesystemLoader.php:133
        return strpos($this->baseDir, '://') === false || strpos($this->baseDir, 'file://') === 0;
                                                                 ^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentConstFetch: null passed to non-nullable parameter context in function file_get_contents at testdata/mustache/src/Mustache/Loader/InlineLoader.php:114
            $data = file_get_contents($this->fileName, false, null, $this->offset);
                                                              ^^^^
WARNING notSafetyCall: potential not safety call in function preg_split signature of param subject at testdata/mustache/src/Mustache/Loader/InlineLoader.php:115
            foreach (preg_split("/^@@(?= [\w\d\.]+$)/m", $data, -1) as $chunk) {
                                                         ^^^^^
WARNING regexpVet: '\w' intersects with '\d' in [\w\d\.] at testdata/mustache/src/Mustache/Loader/InlineLoader.php:115
            foreach (preg_split("/^@@(?= [\w\d\.]+$)/m", $data, -1) as $chunk) {
                                ^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function setLevel signature of param level at testdata/mustache/src/Mustache/Logger/StreamLogger.php:46
        $this->setLevel($level);
                        ^^^^^^
WARNING notNullSafetyFunctionArgumentPropertyFetch: potential null dereference when accessing property 'stream' at testdata/mustache/src/Mustache/Logger/StreamLogger.php:61
            fclose($this->stream);
                   ^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function array_key_exists signature of param key at testdata/mustache/src/Mustache/Logger/StreamLogger.php:102
        if (!array_key_exists($level, self::$levels)) {
                              ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function writeLog signature of param level at testdata/mustache/src/Mustache/Logger/StreamLogger.php:107
            $this->writeLog($level, $message, $context);
                            ^^^^^^
WARNING notNullSafetyFunctionArgumentPropertyFetch: potential null dereference when accessing property 'url' at testdata/mustache/src/Mustache/Logger/StreamLogger.php:128
            $this->stream = fopen($this->url, 'a');
                                  ^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentPropertyFetch: potential null dereference when accessing property 'stream' at testdata/mustache/src/Mustache/Logger/StreamLogger.php:136
        fwrite($this->stream, self::formatLine($level, $message, $context));
               ^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function strtoupper signature of param string at testdata/mustache/src/Mustache/Logger/StreamLogger.php:150
        return strtoupper($level);
                          ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function enablePragma signature of param name at testdata/mustache/src/Mustache/Parser.php:58
            $this->enablePragma($pragma);
                                ^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter name of function getNameAndFilters at testdata/mustache/src/Mustache/Parser.php:88
                list($name, $filters) = $this->getNameAndFilters($token[Mustache_Tokenizer::NAME]);
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter name of function enablePragma at testdata/mustache/src/Mustache/Parser.php:167
                    $this->enablePragma($token[Mustache_Tokenizer::NAME]);
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter string of function substr at testdata/mustache/src/Mustache/Parser.php:235
                if (substr($next[Mustache_Tokenizer::VALUE], -1) !== "\n") {
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentArrayDimFetch: potential null array access in parameter subject of function preg_match at testdata/mustache/src/Mustache/Parser.php:262
            return preg_match('/^\s*$/', $token[Mustache_Tokenizer::VALUE]);
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING switchDefault: Add 'default' branch to avoid unexpected unhandled condition values at testdata/mustache/src/Mustache/Parser.php:307
        switch ($name) {
        ^
WARNING notExplicitNullableParam: parameter with null default value should be explicitly nullable at testdata/mustache/src/Mustache/Parser.php:73
    private function buildTree(array &$tokens, array $parent = null)
                                               ^^^^^
WARNING errorSilence: Don't use @, silencing errors is bad practice at testdata/mustache/src/Mustache/Source/FilesystemSource.php:53
                $this->stat = @stat($this->fileName);
                              ^^^^^^^^^^^^^^^^^^^^^^
WARNING unused: Variable $v is unused (use $_ to ignore this inspection or specify --unused-var-regex flag) at testdata/mustache/src/Mustache/Template.php:122
                foreach ($value as $k => $v) {
                                         ^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function call_user_func signature of param callback at testdata/mustache/src/Mustache/Template.php:174
                ->loadLambda((string) call_user_func($value))
                                                     ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function trim signature of param string at testdata/mustache/src/Mustache/Tokenizer.php:110
        if ($delimiters = trim($delimiters)) {
                               ^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function changeDelimiters signature of param index at testdata/mustache/src/Mustache/Tokenizer.php:145
                        $i = $this->changeDelimiters($text, $i);
                                                            ^^
WARNING notSafetyCall: potential not safety call in function addPragma signature of param index at testdata/mustache/src/Mustache/Tokenizer.php:148
                        $i = $this->addPragma($text, $i);
                                                     ^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function substr signature of param string at testdata/mustache/src/Mustache/Tokenizer.php:188
                                if (substr($lastName, -1) === '}') {
                                           ^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function trim signature of param string when calling function \substr at testdata/mustache/src/Mustache/Tokenizer.php:189
                                    $token[self::NAME] = trim(substr($lastName, 0, -1));
                                                              ^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function substr signature of param string at testdata/mustache/src/Mustache/Tokenizer.php:189
                                    $token[self::NAME] = trim(substr($lastName, 0, -1));
                                                                     ^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function trim signature of param string when calling function \substr at testdata/mustache/src/Mustache/Tokenizer.php:283
            $this->setDelimiters(trim(substr($text, $startIndex, $closeIndex - $startIndex)));
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function substr signature of param offset at testdata/mustache/src/Mustache/Tokenizer.php:283
            $this->setDelimiters(trim(substr($text, $startIndex, $closeIndex - $startIndex)));
                                                    ^^^^^^^^^^^
WARNING notSafetyCall: potential not safety accessing property 'ctag' at testdata/mustache/src/Mustache/Tokenizer.php:330
        $end    = strpos($text, $this->ctag, $index);
                                ^^^^^^^^^^^
WARNING notSafetyCall: potential not safety call in function trim signature of param string when calling function \substr at testdata/mustache/src/Mustache/Tokenizer.php:331
        $pragma = trim(substr($text, $index + 2, $end - $index - 2));
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
