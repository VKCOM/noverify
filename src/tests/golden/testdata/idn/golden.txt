MAYBE   missingPhpdoc: Missing PHPDoc for \Symfony\Polyfill\Intl\Idn\Idn::idn_to_ascii public method at testdata/idn/idn.php:64
    public static function idn_to_ascii($domain, $options, $variant, &$idna_info = array())
                           ^^^^^^^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:64
    public static function idn_to_ascii($domain, $options, $variant, &$idna_info = array())
                                                                                   ^^^^^^^
WARNING errorSilence: Don't use @, silencing errors is bad practice at testdata/idn/idn.php:67
            @trigger_error('idn_to_ascii(): INTL_IDNA_VARIANT_2003 is deprecated', E_USER_DEPRECATED);
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function mb_strtolower signature of param string at testdata/idn/idn.php:71
            $domain = mb_strtolower($domain, 'utf-8');
                                    ^^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:87
        $idna_info = array(
                     
MAYBE   missingPhpdoc: Missing PHPDoc for \Symfony\Polyfill\Intl\Idn\Idn::idn_to_utf8 public method at testdata/idn/idn.php:96
    public static function idn_to_utf8($domain, $options, $variant, &$idna_info = array())
                           ^^^^^^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:96
    public static function idn_to_utf8($domain, $options, $variant, &$idna_info = array())
                                                                                  ^^^^^^^
WARNING errorSilence: Don't use @, silencing errors is bad practice at testdata/idn/idn.php:99
            @trigger_error('idn_to_utf8(): INTL_IDNA_VARIANT_2003 is deprecated', E_USER_DEPRECATED);
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function explode signature of param string at testdata/idn/idn.php:102
        $parts = explode('.', $domain);
                              ^^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:119
        $idna_info = array(
                     
WARNING notSafeCall: potentially not safe call in function mb_chr signature of param codepoint at testdata/idn/idn.php:139
            $output .= mb_chr($code, 'utf-8');
                              ^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function mb_strlen signature of param string at testdata/idn/idn.php:152
        $length = mb_strlen($input, 'utf-8');
                            ^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:195
            'all' => array(),
                     ^^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:196
            'basic' => array(),
                       ^^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:197
            'nonBasic' => array(),
                          ^^^^^^^
MAYBE   arraySyntax: Use the short form '[]' instead of the old 'array()' at testdata/idn/idn.php:194
        $codePoints = array(
                      
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function mb_strlen signature of param string at testdata/idn/idn.php:200
        $length = mb_strlen($input, 'utf-8');
                            ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function mb_substr signature of param string at testdata/idn/idn.php:202
            $char = mb_substr($input, $i, 1, 'utf-8');
                              ^^^^^^
MAYBE   redundantCast: Expression already has int type at testdata/idn/idn.php:233
            $delta = (int) ($delta / 35);
                           ^^^^^^^^^^^^^
MAYBE   assignOp: Could rewrite as `$k += 36` at testdata/idn/idn.php:234
            $k = $k + 36;
            ^^^^^^^^^^^^
MAYBE   redundantCast: Expression already has int type at testdata/idn/idn.php:237
        return $k + (int) (36 * $delta / ($delta + 38));
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function strrpos signature of param haystack at testdata/idn/idn.php:247
        $pos = strrpos($input, '-');
                       ^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function substr signature of param string at testdata/idn/idn.php:249
            $output = substr($input, 0, $pos++);
                             ^^^^^^
WARNING notSafeCall: potentially not safe call in function strlen signature of param string at testdata/idn/idn.php:254
        $outputLength = \strlen($output);
                                ^^^^^^^
WARNING notNullSafetyFunctionArgumentVariable: not null safety call in function strlen signature of param string at testdata/idn/idn.php:255
        $inputLength = \strlen($input);
                               ^^^^^^
MAYBE   assignOp: Could rewrite as `$n += (int) ($i / $outputLength)` at testdata/idn/idn.php:274
            $n = $n + (int) ($i / $outputLength);
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   assignOp: Could rewrite as `$i %= $outputLength` at testdata/idn/idn.php:275
            $i = $i % $outputLength;
            ^^^^^^^^^^^^^^^^^^^^^^^
WARNING notSafeCall: potentially not safe call in function mb_substr signature of param string at testdata/idn/idn.php:276
            $output = mb_substr($output, 0, $i, 'utf-8').mb_chr($n, 'utf-8').mb_substr($output, $i, $outputLength - 1, 'utf-8');
                                ^^^^^^^
WARNING notSafeCall: potentially not safe call in function mb_substr signature of param length at testdata/idn/idn.php:276
            $output = mb_substr($output, 0, $i, 'utf-8').mb_chr($n, 'utf-8').mb_substr($output, $i, $outputLength - 1, 'utf-8');
                                            ^^
WARNING notSafeCall: potentially not safe call in function mb_substr signature of param string at testdata/idn/idn.php:276
            $output = mb_substr($output, 0, $i, 'utf-8').mb_chr($n, 'utf-8').mb_substr($output, $i, $outputLength - 1, 'utf-8');
                                                                                       ^^^^^^^
WARNING notSafeCall: potentially not safe call in function mb_substr signature of param start at testdata/idn/idn.php:276
            $output = mb_substr($output, 0, $i, 'utf-8').mb_chr($n, 'utf-8').mb_substr($output, $i, $outputLength - 1, 'utf-8');
                                                                                                ^^
