MAYBE   assignOp: could rewrite as `$a += $b` at testdata/embeddedrules/assignOp.php:8
$a = $a + $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a -= $b` at testdata/embeddedrules/assignOp.php:12
$a = $a - $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a *= $b` at testdata/embeddedrules/assignOp.php:16
$a = $a * $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a /= $b` at testdata/embeddedrules/assignOp.php:20
$a = $a / $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a %= $b` at testdata/embeddedrules/assignOp.php:24
$a = $a % $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a .= $b` at testdata/embeddedrules/assignOp.php:28
$a = $a . $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a &= $b` at testdata/embeddedrules/assignOp.php:32
$a = $a & $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a |= $b` at testdata/embeddedrules/assignOp.php:36
$a = $a | $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a ^= $b` at testdata/embeddedrules/assignOp.php:40
$a = $a ^ $b; // Could rewrite
^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a <<= $b` at testdata/embeddedrules/assignOp.php:44
$a = $a << $b; // Could rewrite
^^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a >>= $b` at testdata/embeddedrules/assignOp.php:48
$a = $a >> $b; // Could rewrite
^^^^^^^^^^^^^
MAYBE   assignOp: could rewrite as `$a ??= $b` at testdata/embeddedrules/assignOp.php:52
$a = $a ?? $b; // Could rewrite
^^^^^^^^^^^^^
WARNING offBy1: probably intended to use count-1 as an index at testdata/embeddedrules/offBy1.php:7
  $_ = $xs[count($xs)];
       ^^^^^^^^^^^^^^^
WARNING offBy1: probably intended to use sizeof-1 as an index at testdata/embeddedrules/offBy1.php:8
  $_ = $xs[sizeof($xs)];
       ^^^^^^^^^^^^^^^^
WARNING offBy1: probably intended to use count-1 as an index at testdata/embeddedrules/offBy1.php:10
  if ($tabs[count($tabs)] == "") {
      ^^^^^^^^^^^^^^^^^^^
WARNING precedence: == has higher precedence than & at testdata/embeddedrules/precedence.php:4
  $_ = 0 == $mask & $x;
       ^^^^^^^^^^^^^^^
WARNING precedence: != has higher precedence than & at testdata/embeddedrules/precedence.php:5
  $_ = 0 != $mask & $x;
       ^^^^^^^^^^^^^^^
WARNING precedence: === has higher precedence than & at testdata/embeddedrules/precedence.php:6
  $_ = 0 === $mask & $x;
       ^^^^^^^^^^^^^^^^
WARNING precedence: !== has higher precedence than & at testdata/embeddedrules/precedence.php:7
  $_ = 0 !== $mask & $x;
       ^^^^^^^^^^^^^^^^
WARNING precedence: == has higher precedence than | at testdata/embeddedrules/precedence.php:9
  $_ = 0 == $mask | $x;
       ^^^^^^^^^^^^^^^
WARNING precedence: != has higher precedence than | at testdata/embeddedrules/precedence.php:10
  $_ = 0 != $mask | $x;
       ^^^^^^^^^^^^^^^
WARNING precedence: === has higher precedence than | at testdata/embeddedrules/precedence.php:11
  $_ = 0 === $mask | $x;
       ^^^^^^^^^^^^^^^^
WARNING precedence: !== has higher precedence than | at testdata/embeddedrules/precedence.php:12
  $_ = 0 !== $mask | $x;
       ^^^^^^^^^^^^^^^^
WARNING precedence: == has higher precedence than & at testdata/embeddedrules/precedence.php:16
  $_ = $x & $mask == 0;
       ^^^^^^^^^^^^^^^
WARNING precedence: != has higher precedence than & at testdata/embeddedrules/precedence.php:17
  $_ = $x & $mask != 0;
       ^^^^^^^^^^^^^^^
WARNING precedence: === has higher precedence than & at testdata/embeddedrules/precedence.php:18
  $_ = $x & $mask === 0;
       ^^^^^^^^^^^^^^^^
WARNING precedence: !== has higher precedence than & at testdata/embeddedrules/precedence.php:19
  $_ = $x & $mask !== 0;
       ^^^^^^^^^^^^^^^^
WARNING precedence: == has higher precedence than | at testdata/embeddedrules/precedence.php:21
  $_ = $x | $mask == 0;
       ^^^^^^^^^^^^^^^
WARNING precedence: != has higher precedence than | at testdata/embeddedrules/precedence.php:22
  $_ = $x | $mask != 0;
       ^^^^^^^^^^^^^^^
WARNING precedence: === has higher precedence than | at testdata/embeddedrules/precedence.php:23
  $_ = $x | $mask === 0;
       ^^^^^^^^^^^^^^^^
WARNING precedence: !== has higher precedence than | at testdata/embeddedrules/precedence.php:24
  $_ = $x | $mask !== 0;
       ^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: could rewrite as `(bool)$x` at testdata/embeddedrules/ternarySimplify.php:6
    sink($x ? true : false);
         ^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: could replace the ternary with just $x > $y at testdata/embeddedrules/ternarySimplify.php:9
    sink($x > $y ? true : false);
         ^^^^^^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: could rewrite as `$x ?: $y` at testdata/embeddedrules/ternarySimplify.php:12
    sink($x ? $x : $y);
         ^^^^^^^^^^^^
MAYBE   ternarySimplify: could rewrite as `$x[1] ?? $y` at testdata/embeddedrules/ternarySimplify.php:15
    sink(isset($x[1]) ? $x[1] : $y);
         ^^^^^^^^^^^^^^^^^^^^^^^^^
MAYBE   ternarySimplify: could rewrite as `(bool)($flags & SOME_MASK)` at testdata/embeddedrules/ternarySimplify.php:27
    sink(($flags & SOME_MASK) ? true : false);
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
